// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r};function f(r,e,t,n){var o,a;if(r<=0||n<=0||1===e)return t;if(1===n){if((a=r%5)>0)for(o=0;o<a;o++)t[o]*=e;if(r<5)return t;for(o=a;o<r;o+=5)t[o]*=e,t[o+1]*=e,t[o+2]*=e,t[o+3]*=e,t[o+4]*=e;return t}for(r*=n,o=0;o<r;o+=n)t[o]*=e;return t}function c(r,e,t,n,o){var a,i,u;if(r<=0||1===e)return t;if(a=o,1===n){if((u=r%5)>0)for(i=0;i<u;i++)t[a]*=e,a+=n;if(r<5)return t;for(i=u;i<r;i+=5)t[i]*=e,t[i+1]*=e,t[i+2]*=e,t[i+3]*=e,t[i+4]*=e,a+=5;return t}for(i=0;i<r;i++)t[a]*=e,a+=n;return t}e(f,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:c});export{f as default,c as ndarray};
//# sourceMappingURL=mod.js.map
